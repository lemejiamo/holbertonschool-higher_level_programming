# a test file to tesf function matrix divide
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# 0 simple test, perfect conditions
>>> matrix = [ [2, 4, 6, 8], [10, 12, 14, 16] ]
>>> matrix_divided(matrix, 2)
[[1.0, 2.0, 3.0, 4.0], [5.0, 6.0, 7.0, 8.0]]


# 1 test diferent size in elements of matrix
>>> matrix = [[2, 4, 6, 8], [12, 14, 16]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size


# 2 Zero division
>>> matrix = [[2, 4, 6, 8], [0, 12, 14, 16]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero


# 3 negative  division
>>> matrix = [[2, 4, 6, 8], [-10, 12, 14, 16]]
>>> matrix_divided(matrix, 2)
[[1.0, 2.0, 3.0, 4.0], [-5.0, 6.0, 7.0, 8.0]]

# 4 incorrect elements in a list
>>> matrix = [[2, 4, 6, 8], ["AA", 12, 14, 16]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# 5 matrix 1 x 1
>>> matrix = [[2, 4, 6, 8]]
>>> matrix_divided(matrix, 2)
[[1.0, 2.0, 3.0, 4.0]]

# 6 list not matrix
>>> matrix = ["aa",]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
